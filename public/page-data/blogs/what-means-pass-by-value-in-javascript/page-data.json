{"componentChunkName":"component---src-templates-blog-template-js","path":"/blogs/what-means-pass-by-value-in-javascript","result":{"data":{"blog":{"content":"JavaScript is always pass-by-value. It is obvious to see that primitive variables are passed with values.\n\n```\nfunction square(x) {\n  x = x * x\n  return x\n}\n\nvar y = 10\nvar result = square(y)\n\nconsole.log(y) // 10 -- no change\nconsole.log(result) // 100\n```\n\nBut this is not the case for Objects. As seen in the example below, if we assign the firstObj variable to secondObj, they both reference to the same value in memory. Therefore, when we modify firstObj or secondObj, since we are modifying the same reference, we are changing both and show the same value. This should be considered when using the Object.\n\n```\nlet firstObj = { a: 3 }\nconst increaseFirstObj = (obj) => {\n  obj.a++\n  return obj\n}\n\nlet secondObj = increaseFirstObj(firstObj)\n\nconsole.log(firstObj) // { a:4 }\nconsole.log(secondObj) // { a:4 }\nconsole.log(firstObj === secondObj) // true\n\nfirstObj = { a: 7, b: 9 }\n\nconsole.log(firstObj) // { a:7, b:9 }\nconsole.log(secondObj) // { a:4 }\nconsole.log(firstObj === secondObj) //  false\n```\n\n### Helpful resources\n\n+ [Is JavaScript pass-by-value or pass-by-reference?](https://www.30secondsofcode.org/articles/s/javascript-pass-by-reference-or-pass-by-value)\n+ [Understanding JavaScript Pass By Value](https://www.javascripttutorial.net/javascript-pass-by-value/)","title":"What means pass-by-value in JavaScript?","desc":"JavaScript is always pass-by-value. It is obvious to see that primitive variables are passed with values.","image":{"childImageSharp":{"fluid":{"src":"/static/33460519a4cf032724e8c88c2c0ac0ab/ee604/10e588ef6a7fcb1d918039599cbadd7f.png"}}}}},"pageContext":{"slug":"what-means-pass-by-value-in-javascript","author":"Ozan Batuhan Kurucu"}},"staticQueryHashes":["193341554","3000541721"]}